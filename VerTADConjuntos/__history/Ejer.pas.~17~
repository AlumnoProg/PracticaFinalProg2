unit Ejer;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Tipos, ConjuntosAVL, Vcl.StdCtrls;

Const MaxConjunto = 2000;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Edit1: TEdit;
    Button2: TButton;
    Edit2: TEdit;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    Button6: TButton;
    Edit3: TEdit;
    Edit4: TEdit;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  C: Conjunto;
  Largo: Integer;

  implementation

{$R *.dfm}

//------------------------------------------------------------------------------
//Crear conjunto

procedure TForm1.Button1Click(Sender: TObject);
begin
      Largo:= StrToint (Edit1.Text);
      C.Crear(Cadena,Largo);
      Memo1.Clear;
      Memo1.Lines.Add('- CONJUNTOS SETEADOS CON EXITO. -');
      Memo1.Lines.Add(' ');
end;


//------------------------------------------------------------------------------
//Cargar conjunto

Function ValidarEdit (S: String; Var Dato: string) : Boolean;
begin
  Result:= true;
  if S = '' then
    result:= False;
  if S = ' ' then
    Result:= False;
  if Length(S) <> 1 then
    Result:= False;
  Dato:= S;
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  X: TipoElemento;
  Dato: string;
begin
if Largo = 0  then
  Begin
    Memo1.Lines.Add('- NO ES POSIBLE AGREGAR ELEMENTOS A UN CONJUNTO DE LONGITUD 0. -');
  End
  else
  begin
    if C.EsLLeno then
     Memo1.Lines.Add('- CONJUNTO 1 LLENO. -')
      else
      begin
        if ValidarEdit (Edit2.Text, Dato) then
          begin
            X.Clave:= Dato;
            If C.Agregar(X) <> ClaveDuplicada Then
              Memo1.Lines.Add('- DATO : " '+ Dato +' " CARGADO CON EXITO EN EL CONJUNTO 1. -')
                Else Memo1.Lines.Add('-EL DATO : " '+ Dato +' " YA FUE INGRESADO EN EL CONJUNTO 1. -');
          end
          else
            begin
              Memo1.Lines.Add('- ERROR, DATOS INVALIDOS. -');
              Memo1.Lines.Add('');
              Memo1.Lines.Add('- VALORES PERMITIDOS. -');
              Memo1.Lines.Add('');
              Memo1.Lines.Add('_ CUALQUIER VALOR NO VACIO DE 1 DIGITO.');
            end;
      end;
  end;
end;


//------------------------------------------------------------------------------
//Ver conjunto

procedure TForm1.Button3Click(Sender: TObject);
begin
  memo1.Lines.Add(C.RetornarClaves);
end;


//------------------------------------------------------------------------------
//Buscar si un elemento existe en el conjunto

procedure TForm1.Button5Click(Sender: TObject);
var
  X: TipoElemento;
begin
  X.Clave:= edit3.Text;
  {if (C.BuscarElemento(X)) then
    memo1.Lines.Add('El elemento existe')
  else
    memo1.Lines.Add('El elemento no existe'); }
end;


//------------------------------------------------------------------------------
//Buscar si un elemento existe en el conjunto avl

procedure TForm1.Button6Click(Sender: TObject);
var
  X: TipoElemento;
begin
  X.Clave:= edit4.Text;
  if (C.BuscarElementos(X)) then
    memo1.Lines.Add('El elemento existe')
  else
    memo1.Lines.Add('El elemento no existe');
end;

end.
