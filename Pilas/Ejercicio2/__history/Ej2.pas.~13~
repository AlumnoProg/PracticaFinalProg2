unit Ej2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Tipos, StackArray, Vcl.StdCtrls;

  Const MaxPila = 2000;
      MaxEntero = 9999999;
      MaxCadena = 255;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Button1: TButton;
    Edit1: TEdit;
    Button2: TButton;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Button3: TButton;
    Edit5: TEdit;
    Button4: TButton;
    Edit6: TEdit;
    Button5: TButton;
    Edit7: TEdit;
    Memo1: TMemo;
    Button6: TButton;
    Edit8: TEdit;
    Button7: TButton;
    Button8: TButton;
    Button9: TButton;
    Button10: TButton;
    Button11: TButton;
    Button12: TButton;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  Tamanio: Integer;
  P: Pila;

implementation

{$R *.dfm}


//------------------------------------------------------------------------------
//BOTON DE CREAR / RESETEAR PILA

Function ValidarTamanio(Edit: String; Var Validado: Integer): Boolean;
begin

  ValidarTamanio:= False;
  if (TryStrToInt(Edit, Validado)) and (Validado >= 1) and (Validado <= 2000) then
    ValidarTamanio:= True;

end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  if (ValidarTamanio(edit1.Text, Tamanio)) then begin
    P.Crear(Numero, Tamanio);
    memo1.Lines.Add('Pila creada con éxito');
  end else
    memo1.lines.Add('Error, ingrese valores permitidos');
end;


//------------------------------------------------------------------------------
//BOTON DE CARGAR ELEMENTO MANUALMENTE

Function ValidarEdit(S: String): Boolean;
var
  i: Integer;
begin

  if (TryStrToInt(S, i)) then
    ValidarEdit:= True
  else
    ValidarEdit:= False;

end;

procedure TForm1.Button2Click(Sender: TObject);
var
  X: TipoElemento;
begin

  if (ValidarEdit(edit2.Text)) then begin
    if (not P.EsLlena) then begin
      X.Clave:= StrToInt(edit2.Text);
      P.Apilar(X);
      memo1.Lines.Add(edit2.Text + ' apilado con éxito');
    end else
      memo1.Lines.Add('Pila llena');
  end else
    memo1.Lines.Add('Error, ingrese un numero entero');
end;


//------------------------------------------------------------------------------
//BOTON DE CARGAR PILA RANDOM

Procedure CargarPilaRandom(Cant: Integer; Desde, Hasta: LongInt; Var P: Pila);
var
  X: TipoElemento;
  Seguir: Boolean;
  Posicion: Integer;
begin

  Posicion:= 1;
  Seguir:= True;
  Randomize;
  while (Posicion <= Cant) and (Seguir) do begin
    X.Clave:= Desde + Random((Hasta - Desde) + 1);
    if (P.Apilar(X) <> OK) then
      Seguir:= False;
    Inc(Posicion);
  end;

end;

procedure TForm1.Button3Click(Sender: TObject);
var
  Desde, Hasta: LongInt;
  CantidadElementos: Integer;
begin

  if (ValidarEdit(edit3.Text)) and (ValidarEdit(edit4.Text)) and (ValidarEdit(edit5.Text)) then begin
    if (StrToInt(edit5.Text) <= Tamanio) then begin
      Desde:= StrToInt(edit3.Text);
      Hasta:= StrToInt(edit4.Text);
      CantidadElementos:= StrToInt(edit5.Text);
      if (Desde < Hasta) then begin
        CargarPilaRandom(CantidadElementos, Desde, Hasta, P);
        memo1.Lines.Add('Pila cargada aleatoriamente con éxito');
      end else
        memo1.Lines.Add('el valor de Desde tiene que ser menor al valor de hasta');
    end else
      memo1.Lines.Add('La cantidad de elementos no puede ser mayor al tamanio de la pila');
  end else
    memo1.Lines.Add('Error, ingrese numeros enteros');
end;


//------------------------------------------------------------------------------
//BOTON DE BUSCAR CLAVE

Function BuscarElemento(Elemento: Integer; Var P: Pila): Pila; var
  X: TipoElemento;
  PAux, PR: Pila;
  Posicion: Integer;
begin
  PAux.Crear(p.DatoDeLaClave, p.SizeStack);
  PR.Crear(P.DatoDeLaClave, P.SizeStack);
  Posicion:= 1;
  while (not P.EsVacia) do begin
    X:= P.Recuperar;
    if (X.Clave = Elemento) then begin
      X.Valor1:= Posicion;
      PR.Apilar(X);
    end;
    PAux.Apilar(X);
    P.DesApilar;
    Inc(Posicion);
  end;
  P.InterCambiar(PAux, False);
  Result:= PR;
end;

procedure TForm1.Button4Click(Sender: TObject);
var
  Numero: Integer;
  PAux: Pila;
begin

  if (not P.EsVacia) then begin
    if (ValidarEdit(edit6.Text)) then begin
      Numero:= StrToInt(edit6.Text);
      PAux:= BuscarElemento(Numero, P);
      if (not PAux.EsVacia) then
        memo1.Lines.Add('El elemento ' + Numero.ToString + ' existe en la pila')
      else
        memo1.Lines.Add('El elemento ' + Numero.ToString + ' no existe en la pila');
    end else
      memo1.Lines.Add('Error, ingrese un numero entero');
  end else
    memo1.Lines.Add('Pila vacía');
end;


//------------------------------------------------------------------------------
//BOTON COLOCAR FONDO

Function CantidadElementos(var P: Pila): Integer;
var
  X: TipoElemento;
  PAux: Pila;
  Cantidad: Integer;
  Seguir: Boolean;
begin

  PAux.Crear(P.DatoDeLaClave, P.SizeStack);
  Cantidad:= 0;
  Seguir:= True;
  while (not P.EsVacia) and (Seguir) do begin
    X:= P.Recuperar;
    if (not X.EsTEVacio) then begin
      PAux.Apilar(X);
      P.DesApilar;
      Inc(Cantidad);
    end else
      Seguir:= False;
  end;
  P.InterCambiar(PAux, False);
  CantidadElementos:= Cantidad;

end;

Function ColocarAlFinal(var P: Pila): Pila;
var
  X: TipoElemento;
  PAux: Pila;
begin

end;

procedure TForm1.Button5Click(Sender: TObject);
var
  Numero: String;
begin

  if (CantidadElementos(P) < 2000) then begin
    if (ValidarEdit(edit7.Text)) then begin
      Numero:= edit7.Text;
      if (ColocarAlFinal(Numero, P)) then begin
        memo1.Lines.Add('Elemento cargado al final con éxito');
      end else
        memo1.Lines.Add('No se pudo cargar el elemento');
    end else
      memo1.Lines.Add('Error, ingrese un numero entero');
  end else
    memo1.Lines.Add('Pila llena');
end;

end.
