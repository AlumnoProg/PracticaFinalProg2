unit Ej3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Tipos, ListArray, Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Edit1: TEdit;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Edit2: TEdit;
    Edit3: TEdit;
    Button5: TButton;
    Button1: TButton;
    Button6: TButton;
    Memo1: TMemo;
    Button7: TButton;
    Button8: TButton;
    Edit4: TEdit;
    Button9: TButton;
    Edit5: TEdit;
    Button10: TButton;
    Button11: TButton;
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  L1, L2, LAux: Lista;

implementation

{$R *.dfm}

//------------------------------------------------------------------------------
//CREAR LISTA

Function ValidarTamanio(Tamanio: String):Boolean;
var
  i:integer;
begin
  if (not(TryStrToInt(Tamanio, i))) or (i < 1) or (i > 2000) then
    ValidarTamanio:= False
  else
    ValidarTamanio:= True;
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  Tamanio: String;
begin
  Tamanio:= edit1.Text;
  if (ValidarTamanio(Tamanio)) then begin
    L1.Crear(Numero, StrToInt(Tamanio));
    L2.Crear(Numero, StrToInt(Tamanio));
    LAux.Crear(Numero, StrToInt(Tamanio));
    memo1.Lines.Add('Listas creadas con éxito');
  end else
    memo1.Lines.Add('Error, ingrese un numero entero entre 1 y 2000');
end;


//------------------------------------------------------------------------------
//CARGAR LISTA 1

Function ValidarEdit(Edit: String):Boolean;
var
  i: integer;
begin

  if (not(TryStrToInt(Edit, i))) then
    ValidarEdit:= False
  else
    ValidarEdit:= True;

end;

procedure TForm1.Button3Click(Sender: TObject);
var
  X: TipoElemento;
  Numero: String;
begin
  Numero:= edit2.Text;
  if (L1.EsLLena = False) then begin
    if (ValidarEdit(Numero)) then begin
      X.Clave:= StrToInt(Numero);
      L1.Agregar(X);
      LAux.Agregar(X);
      memo1.Lines.Add(Numero + ' cargado con éxito en la lista 1');
    end else
      memo1.Lines.Add('Error, ingrese un numero entero');
  end else
    memo1.Lines.Add('Lista 1 llena');
end;


//------------------------------------------------------------------------------
//CARGAR LISTA 2

procedure TForm1.Button4Click(Sender: TObject);
var
  X: TipoElemento;
  Numero: String;
begin
  Numero:= edit3.Text;
  if (L2.EsLLena = False) then begin
    if (ValidarEdit(Numero)) then begin
      X.Clave:= StrToInt(Numero);
      L2.Agregar(X);
      memo1.Lines.Add(Numero + ' cargado con éxito en la lista 2');
    end else
      memo1.Lines.Add('Error, ingrese un numero entero');
  end else
    memo1.Lines.Add('Lista 2 llena');
end;

end.
